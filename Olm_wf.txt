1... from gtts import gTTS
... 2... import os
... 
3... def maketext(program_name, program_t, program_com, program_var):
... 4...     with open(program_name,'r') as tts_file, open('Olm_wf.txt','a') as write_f:
... 5...         ... 6... integer         program_count = 1
... 
7...         for line in tts_file:
... 
8...             if (program_com == False):
... 9...                 ... 10...                 if(line[0] == '... 11...                     pass
... 12...                 ... 13... string                 line = line.partition('... 
14...             ... 15...             if (program_var):
... 16...                 for char in line:
... 17... character character character character                     if char is '=' and line[line.find('=')+1] != '=':
... 18...                          findvar = -1
... 19... integer                         findend = 1
... 
20...                         ... 21...                         while line[line.find(char) + findvar] == ' ':
... 22... integer                             findvar -= 1
... 23... string                         foundvar = line[0:line.find(char) + findvar]
... 24...                         if foundvar == "":
... 25... string                             foundvar = line[0:line.find(char) + -1]
... 
26...                         ... 27... string                         findingcount = line[line.find(char) + findend]
... 28... string                         char_bool = False
... 29...                         while findingcount == ' ' or findingcount == "'" or findingcount == '"':
... 30...                             if findingcount == "'":
... 31... string                                 char_bool = True
... 
32... integer                             findend += 1
... 33... string                             findingcount = line[line.find(char) + findend]
... 
34... string                         foundend = line[line.find(char) + findend]
... 35...                          typevar = ""
... 36...                          array_l = ""
... 37...                         
... 38...                         ... 39... string                         arraycheck = False
... 40...                         if foundend == '[':
... 41... string                             convert_ar = eval(line[line.find(foundend):len(line)])
... 42... string                             array_l = str(len(convert_ar))
... 43...             
... 44... string                             foundend = line[line.find(char) + findend + 1]
... 45... string                             arraycheck = True
... 
46...                         if(char_bool):
... 47... string                             typevar = "character"
... 48...                         elif(foundend.isalpha()):
... 49... string                             typevar = "string"
... 50...                         elif(foundend.isnumeric()):
... 51... string                             typevar = "integer"
... 52...                         elif(foundend == '{'):
... 53... string                             typevar = "dictionary"
... 

54...                         if(arraycheck):
... 55... string                             string_c = " array of length " + array_l + " "
... 56... string                             line = line.replace(str(foundvar), typevar + string_c + foundvar)
... 57...                         else:
... 58... string                             line = line.replace(str(foundvar), typevar + " " + foundvar)
... 59...                             
... 60...             if (program_t == True) and line != '\n':
... 61...                 write_f.write(str(program_count) + '... ')
... 62... integer                 program_count += 1
... 63...             
... 64...             ... 65...             ... 66... string             addellipses = True
... 67...             try:
... 68...                 line[-2]
... 69...             except IndexError:
... 70... string                 addellipses = False
... 71...             if addellipses:
... 72... string                 line = line + ("... ")
... 73...             write_f.write(line)
... 
74... def main(program_name, program_t, program_com, program_var, slow):
... 75...     ... 76... character     language = 'en'
... 77...     
... 78...     ... 79...     ... 80...     ... 
81...     if (os.path.isfile('Olm_wf.txt') == True):
... 82...         os.remove('Olm_wf.txt')
... 
83...     maketext(program_name, program_t, program_com, program_var)
... 
84... string     tts_text = open('Olm_wf.txt', 'r').read().replace("\n", " ")
... 85... string string string string     speech  = gTTS(text = str(tts_text), lang = language, slow = slow)
... 86...       
... 87...     ... 88...     speech.save("Olm_tts.mp3")
... 
89... if __name__ == '__main__':
... 90...     main()
... 